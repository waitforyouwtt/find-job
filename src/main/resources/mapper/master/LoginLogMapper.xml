<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fenghuang.job.dao.master.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.fenghuang.job.entity.LoginLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="login_status" jdbcType="INTEGER" property="loginStatus" />
    <result column="login_date" jdbcType="TIMESTAMP" property="loginDate" />
    <result column="fail_remark" jdbcType="VARCHAR" property="failRemark" />
    <result column="login_ip" jdbcType="VARCHAR" property="loginIp" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, login_status, login_date, fail_remark, login_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fenghuang.job.entity.LoginLog">
    insert into login_log (id, user_id, login_status, 
      login_date, fail_remark, login_ip
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{loginStatus,jdbcType=INTEGER}, 
      #{loginDate,jdbcType=TIMESTAMP}, #{failRemark,jdbcType=VARCHAR}, #{loginIp,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fenghuang.job.entity.LoginLog">
    insert into login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="loginStatus != null">
        login_status,
      </if>
      <if test="loginDate != null">
        login_date,
      </if>
      <if test="failRemark != null">
        fail_remark,
      </if>
      <if test="loginIp != null">
        login_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginStatus != null">
        #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="failRemark != null">
        #{failRemark,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        #{loginIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fenghuang.job.entity.LoginLog">
    update login_log
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="loginStatus != null">
        login_status = #{loginStatus,jdbcType=INTEGER},
      </if>
      <if test="loginDate != null">
        login_date = #{loginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="failRemark != null">
        fail_remark = #{failRemark,jdbcType=VARCHAR},
      </if>
      <if test="loginIp != null">
        login_ip = #{loginIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fenghuang.job.entity.LoginLog">
    update login_log
    set user_id = #{userId,jdbcType=INTEGER},
      login_status = #{loginStatus,jdbcType=INTEGER},
      login_date = #{loginDate,jdbcType=TIMESTAMP},
      fail_remark = #{failRemark,jdbcType=VARCHAR},
      login_ip = #{loginIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findLogin" resultMap="BaseResultMap" parameterType="com.fenghuang.job.request.ReqLoginLog">
    select
     <include refid="Base_Column_List" />
    from login_log
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
      <if test="loginStatus != null">
        and login_status = #{loginStatus}
      </if>
      <if test="loginIp != null">
        and login_ip = #{loginIp}
      </if>
      <if test="loginDateBegin!=null and loginDateBegin!=''">
       <![CDATA[   and DATE_FORMAT(login_date, '%Y-%m-%d')>=  DATE_FORMAT(#{loginDateBegin}, '%Y-%m-%d')   ]]>
      </if>
      <if test="loginDateEnd!=null and loginDateEnd!=''">
        <![CDATA[  and DATE_FORMAT(login_date, '%Y-%m-%d') <= DATE_FORMAT(#{loginDateEnd}, '%Y-%m-%d')    ]]>
      </if>
    </where>
  </select>
</mapper>