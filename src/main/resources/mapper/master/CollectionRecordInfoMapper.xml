<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fenghuang.job.dao.master.CollectionRecordInfoMapper">
  <resultMap id="BaseResultMap" type="com.fenghuang.job.entity.CollectionRecordInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_title" jdbcType="VARCHAR" property="projectTitle" />
    <result column="is_collection" jdbcType="INTEGER" property="isCollection" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="founder" jdbcType="VARCHAR" property="founder" />
    <result column="modifier" jdbcType="VARCHAR" property="modifier" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, project_id, project_title, is_collection, is_delete, founder, modifier, 
    create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collection_record_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collection_record_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fenghuang.job.entity.CollectionRecordInfo">
    insert into collection_record_info (id, user_id, project_id, 
      project_title, is_collection, is_delete, 
      founder, modifier, create_date, 
      update_date)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, 
      #{projectTitle,jdbcType=VARCHAR}, #{isCollection,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, 
      #{founder,jdbcType=VARCHAR}, #{modifier,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fenghuang.job.entity.CollectionRecordInfo">
    insert into collection_record_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectTitle != null">
        project_title,
      </if>
      <if test="isCollection != null">
        is_collection,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="founder != null">
        founder,
      </if>
      <if test="modifier != null">
        modifier,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectTitle != null">
        #{projectTitle,jdbcType=VARCHAR},
      </if>
      <if test="isCollection != null">
        #{isCollection,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="founder != null">
        #{founder,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fenghuang.job.entity.CollectionRecordInfo">
    update collection_record_info
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectTitle != null">
        project_title = #{projectTitle,jdbcType=VARCHAR},
      </if>
      <if test="isCollection != null">
        is_collection = #{isCollection,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="founder != null">
        founder = #{founder,jdbcType=VARCHAR},
      </if>
      <if test="modifier != null">
        modifier = #{modifier,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fenghuang.job.entity.CollectionRecordInfo">
    update collection_record_info
    set user_id = #{userId,jdbcType=INTEGER},
      project_id = #{projectId,jdbcType=INTEGER},
      project_title = #{projectTitle,jdbcType=VARCHAR},
      is_collection = #{isCollection,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      founder = #{founder,jdbcType=VARCHAR},
      modifier = #{modifier,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateCollectionRecordInfoState" parameterType="com.fenghuang.job.request.ReqCollectionRecordInfoState">
    update collection_record_info set is_collection = #{collectionState},update_date = now(),modifier = #{userId}
    where user_id = #{userId} and project_id = #{projectId}
  </update>

  <select id="findCollectionRecordInfo" resultMap="BaseResultMap" parameterType="com.fenghuang.job.request.ReqCollectionRecordInfoQuery">
    select
    <include refid="Base_Column_List" />
    from collection_record_info
    <where>
      <if test="id != null">
        and id = #{id}
      </if>
      <if test="userId != null">
        and user_id = #{userId}
      </if>
      <if test="projectId != null">
        and project_id = #{projectId}
      </if>
      <if test="isDelete != null">
        and is_delete = #{isDelete}
      </if>
      <if test="isCollection != null">
        and is_collection = #{isCollection}
      </if>
    </where>
  </select>

  <select id="findByUserId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from collection_record_info where user_id = #{userId}
  </select>

  <update id="cancelCollectionRecordInfo" parameterType="com.fenghuang.job.request.ReqCollectionRecordInfoState">
    update collection_record_info set is_collection = #{collectionState},update_date = now() where user_id = #{userId} and id = #{id}
  </update>

  <select id="findCollectionRecordInfoPage" resultType="com.fenghuang.job.view.CollectionRecordInfoView" parameterType="com.fenghuang.job.request.ReqCollectionRecordInfoQuery">
      select
      a.id as collectionRecordInfoId,
      a.user_id as userId,
      a.is_collection as isCollection,
      b.id as projectId,
      b.user_name as userName,
      b.project_type_id as projectTypeId,
      b.project_type_name as projectTypeName,
      b.project_title as projectTitle,
      b.project_content as projectContent,
      b.project_ascription_company as projectAscriptionCompany,
      b.province_id as provinceId,
      b.province_title as provinceTitle,
      b.city_id as cityId,
      b.city_title as cityTitle,
      b.area_id as areaId,
      b.area_title as areaTitle,
      b.work_address as workAddress,
      b.gender_requirement as genderRequirement,
      b.project_label as projectLabel,
      b.salary ,
      b.salary_unit as salaryUnit,
      b.settlement_cycle as settlementCycle,
      b.work_welfares_id as workWelfaresId,
      b.project_need_num as projectNeedNum,
      b.project_contacts_name as projectContactsName,
      b.project_contacts_mobile as projectContactsMobile,
      b.project_contacts_email as projectContactsEmail,
      b.project_skill as projectSkill,
      b.work_time_num as workTimeNum,
      b.work_time_unit as workTimeUnit,
      b.work_time_requirement as workTimeRequirement,
      b.project_begin_time as  projectBeginTime,
      b.project_end_time as projectEndTime,
      b.project_remark as projectRemark,
      b.project_state as projectState,
      b.examine_status as examineStatus
      from collection_record_info as a
      left join project_info as b
      on a.project_id = b.id
      where a.user_id = 1 and a.is_delete = 2
  </select>


</mapper>